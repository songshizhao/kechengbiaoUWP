//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 15.0.26228.0
// 
namespace 课程表UWP.mywebservice {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="mywebservice.kechengbiaoSoap")]
    public interface kechengbiaoSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/uploadclass", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<课程表UWP.mywebservice.uploadclassResponse> uploadclassAsync(课程表UWP.mywebservice.uploadclassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadClassById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<课程表UWP.mywebservice.DownloadClassByIdResponse> DownloadClassByIdAsync(课程表UWP.mywebservice.DownloadClassByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadClassByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<课程表UWP.mywebservice.DownloadClassByNameResponse> DownloadClassByNameAsync(课程表UWP.mywebservice.DownloadClassByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/loadallclass", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<课程表UWP.mywebservice.ArrayOfXElement> loadallclassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelectMN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<课程表UWP.mywebservice.ArrayOfXElement> SelectMNAsync(int m, int n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchclass", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<课程表UWP.mywebservice.ArrayOfXElement> searchclassAsync(string classtitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocumentLenById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetDocumentLenByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocumentLenByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> GetDocumentLenByNameAsync(string classtitle);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadclass", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uploadclassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string classtitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] classfile;
        
        public uploadclassRequest() {
        }
        
        public uploadclassRequest(string classtitle, byte[] classfile) {
            this.classtitle = classtitle;
            this.classfile = classfile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadclassResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class uploadclassResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int uploadclassResult;
        
        public uploadclassResponse() {
        }
        
        public uploadclassResponse(int uploadclassResult) {
            this.uploadclassResult = uploadclassResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadClassById", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadClassByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DownloadClassByIdRequest() {
        }
        
        public DownloadClassByIdRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadClassByIdResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadClassByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadClassByIdResult;
        
        public DownloadClassByIdResponse() {
        }
        
        public DownloadClassByIdResponse(byte[] DownloadClassByIdResult) {
            this.DownloadClassByIdResult = DownloadClassByIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadClassByName", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadClassByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string classtitle;
        
        public DownloadClassByNameRequest() {
        }
        
        public DownloadClassByNameRequest(string classtitle) {
            this.classtitle = classtitle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadClassByNameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadClassByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadClassByNameResult;
        
        public DownloadClassByNameResponse() {
        }
        
        public DownloadClassByNameResponse(byte[] DownloadClassByNameResult) {
            this.DownloadClassByNameResult = DownloadClassByNameResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface kechengbiaoSoapChannel : 课程表UWP.mywebservice.kechengbiaoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class kechengbiaoSoapClient : System.ServiceModel.ClientBase<课程表UWP.mywebservice.kechengbiaoSoap>, 课程表UWP.mywebservice.kechengbiaoSoap {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public kechengbiaoSoapClient() : 
                base(kechengbiaoSoapClient.GetDefaultBinding(), kechengbiaoSoapClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.kechengbiaoSoap.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public kechengbiaoSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(kechengbiaoSoapClient.GetBindingForEndpoint(endpointConfiguration), kechengbiaoSoapClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public kechengbiaoSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(kechengbiaoSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public kechengbiaoSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(kechengbiaoSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public kechengbiaoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<课程表UWP.mywebservice.uploadclassResponse> 课程表UWP.mywebservice.kechengbiaoSoap.uploadclassAsync(课程表UWP.mywebservice.uploadclassRequest request) {
            return base.Channel.uploadclassAsync(request);
        }
        
        public System.Threading.Tasks.Task<课程表UWP.mywebservice.uploadclassResponse> uploadclassAsync(string classtitle, byte[] classfile) {
            课程表UWP.mywebservice.uploadclassRequest inValue = new 课程表UWP.mywebservice.uploadclassRequest();
            inValue.classtitle = classtitle;
            inValue.classfile = classfile;
            return ((课程表UWP.mywebservice.kechengbiaoSoap)(this)).uploadclassAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<课程表UWP.mywebservice.DownloadClassByIdResponse> 课程表UWP.mywebservice.kechengbiaoSoap.DownloadClassByIdAsync(课程表UWP.mywebservice.DownloadClassByIdRequest request) {
            return base.Channel.DownloadClassByIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<课程表UWP.mywebservice.DownloadClassByIdResponse> DownloadClassByIdAsync(int id) {
            课程表UWP.mywebservice.DownloadClassByIdRequest inValue = new 课程表UWP.mywebservice.DownloadClassByIdRequest();
            inValue.id = id;
            return ((课程表UWP.mywebservice.kechengbiaoSoap)(this)).DownloadClassByIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<课程表UWP.mywebservice.DownloadClassByNameResponse> 课程表UWP.mywebservice.kechengbiaoSoap.DownloadClassByNameAsync(课程表UWP.mywebservice.DownloadClassByNameRequest request) {
            return base.Channel.DownloadClassByNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<课程表UWP.mywebservice.DownloadClassByNameResponse> DownloadClassByNameAsync(string classtitle) {
            课程表UWP.mywebservice.DownloadClassByNameRequest inValue = new 课程表UWP.mywebservice.DownloadClassByNameRequest();
            inValue.classtitle = classtitle;
            return ((课程表UWP.mywebservice.kechengbiaoSoap)(this)).DownloadClassByNameAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<课程表UWP.mywebservice.ArrayOfXElement> loadallclassAsync() {
            return base.Channel.loadallclassAsync();
        }
        
        public System.Threading.Tasks.Task<课程表UWP.mywebservice.ArrayOfXElement> SelectMNAsync(int m, int n) {
            return base.Channel.SelectMNAsync(m, n);
        }
        
        public System.Threading.Tasks.Task<课程表UWP.mywebservice.ArrayOfXElement> searchclassAsync(string classtitle) {
            return base.Channel.searchclassAsync(classtitle);
        }
        
        public System.Threading.Tasks.Task<int> GetDocumentLenByIdAsync(int id) {
            return base.Channel.GetDocumentLenByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<int> GetDocumentLenByNameAsync(string classtitle) {
            return base.Channel.GetDocumentLenByNameAsync(classtitle);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.kechengbiaoSoap)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.kechengbiaoSoap)) {
                return new System.ServiceModel.EndpointAddress("http://www.songshizhao.com/kechengbiao.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return kechengbiaoSoapClient.GetBindingForEndpoint(EndpointConfiguration.kechengbiaoSoap);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return kechengbiaoSoapClient.GetEndpointAddress(EndpointConfiguration.kechengbiaoSoap);
        }
        
        public enum EndpointConfiguration {
            
            kechengbiaoSoap,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.ServiceReference.Platforms", "15.0.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement() {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes {
            get {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema() {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer) {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            ) {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader) {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            ) {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element)) {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else {
                    reader.Skip();
                }
            }
        }
    }
}
